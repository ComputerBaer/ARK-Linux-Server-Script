#!/bin/bash

# Version Checker 
version="1.2.7"

source ../version.ini
source ../configuration.ini
source formatting.ini

# Compare Versions
echo -e; echo -e "$YELLOW Checking version with github. $RESET"
if [ $version != $startserver ]; then
    echo -e " Script update available! (Start Script)"
    echo -e; echo -e "$YELLOW Downloading script file. $RESET"
    curl https://raw.githubusercontent.com/Zendrex/ARK-Linux-Server-Script/master/.serverscript/startserver -o startserver -#
    echo -e; echo -e "$GREEN File overwritten. Please restart the script. $RESET"
    exit 0
else
    echo -e " Up to date!"; echo -e
    sleep 1s
fi


echo -e " Checking if server session exists..."
sleep 0.5s; cd ../
if screen -list | grep -q "$sessionName"; then
    echo -e "$ERR The server is already running. The server session name is:$YELLOW $sessionname $RESET"
    echo -e " Would you like to stop this running server?"
    echo -e; sleep 0.5s
    echo -e -n "$YELLOW Type: Yes(Y) or No(N): $RESET" ; read runningsession
    sleep 0.5s
    if [ $runningsession = Y ] || [ $runningsession = y ]; then
		echo -e " Server is running, now stopping."
        screen -S $sessionName -X quit
        echo -e " Session stopped. Removing PID's"
        PID=`pgrep -f $arkExecute`
        kill -9 $PID
		echo -e " PID's removed"
		echo -e; sleep 0.5s
		echo -e "$RED Server stopped $RESET"
    elif [ $runningsession = N ] || [ $runningsession = n ]; then
        echo -e; echo -e "$RED Exiting script."
        exit 0
    else
		echo -e "$ERR You have entered an invalid response. Exiting"
		echo -e; exit 0
    fi
else
	echo -e " Server isn't running."
	echo -e; sleep 0.5s
fi


# ULIMIT CHANGE
echo -e "$YELLOW Setting ULIMIT to 100000 $RESET"
ulimit -n 100000
echo -e " ULIMIT set to 100000"
cd $gameDir

echo -e; sleep 0.5s
echo -e "$YELLOW Making sure executable is properly named. $RESET"
if [ -f $arkExecute ]; then
    sleep 0.5s
    echo -e " Executable found."
else
	sleep 0.5s
    echo -e "$ERR Executable could not be found. Fixing it."
    cp ShooterGameServer $arkExecute
    sleep 0.5s
    if [ -f $arkExecute ]; then
        echo -e " Executable renamed. Moving on."
    else
        echo -e; echo -e "$ERR Unable to fix executable name."
        echo -e " Please change the file named$YELLOW ShooterGameServer$RESET to$GREEN $arkExecute $RESET"
        sleep 1s; exit 0
    fi
fi

if [[ -z "$ipAddress" ]]; then
	setIpAddress=""
else
	setIpAddress="MultiHome=$ipAddress?"
fi

if [[ -z "$hostName" ]]; then
	setHostName=""
    hostName="$YELLOW LOADED FROM GameUserSettings.ini $RESET"
else
	setHostName="SessionName=$hostName?"
fi

sleep 1s
echo -e; echo -e "$YELLOW Running startup parameters. These parameters will be listed below. $RESET"
echo -e; echo -e "-----------------------------------------------------"; echo -e
echo -e " Executed File: $arkExecute"
echo -e " Screen Name: $sessionName"
echo -e " HostName: \e[1;32m$hostName\e[1;33m$arkServersName $RESET"
echo -e " AdminPass: \e[1;33m$adminPass $RESET"

if [ -z $serverPass ]; then
    echo -e " ServerPass \e[1;31mNO PASSWORD $RESET"
else
    echo -e " ServerPass \e[1;31m$serverPass $RESET"
fi
    
if [ -z $arkServersName ]; then
    echo -e " ArkServers \e[1;31mDISABLED $RESET" 
else    
    echo -e " ArkServers \e[1;31m$arkServers $RESET"   
fi

echo -e
echo -e "-----------------------------------------------------"; echo -e
sleep 0.5s
echo -e "$YELLOW To view server settings, use:$GREEN ./arkserver.sh status $RESET"; echo -e
echo -e "$YELLOW Now executing.... $RESET"

executeString="
$map?\
listen?\
"$setHostName"\
Port=$gamePort?\
QueryPort=$queryPort?\
"$setIpAddress"\
MaxPlayers=$playerCount?\
ServerAdminPassword=$adminPass?\
ServerPassword=$serverPass?\
bEnablePvPGamma=$enablePvPGamma?\
ShowMapPlayerLocation=$showPlayers?\
ServerHardcore=$hardcore?\
GlobalVoiceChat=$globalVoice?\
ProximityChat=$proxChat?\
NoTributeDownloads=$noTributeDl?\
AllowThirdPersonPlayer=$thirdPerson?\
AlwaysNotifyPlayerLeft=$notifyLeft?\
DontAlwaysNotifyPlayerJoined=$dontNotifyJoin?\
ServerPVE=$pveServer?ServerCrosshair=$crossHair?\
ServerForceNoHUD=$noHud?\
DifficultyOffset=$difficulty?\
KickIdlePlayersPeriod=$afkTimer?\
AutoSavePeriodMinutes=$autoSave?\
TamingSpeedMultiplier=$TamingSpeedMultiplier?\
HarvestAmountMultiplier=$HarvestAmountMultiplier?\
PlayerCharacterWaterDrainMultiplier=$PlayerCharacterWaterDrainMultiplier?\
PlayerCharacterFoodDrainMultiplier=$PlayerCharacterFoodDrainMultiplier?\
DinoCharacterFoodDrainMultiplier=$DinoCharacterFoodDrainMultiplier?\
PlayerCharacterStaminaDrainMultiplier=$PlayerCharacterStaminaDrainMultiplier?\
DinoCharacterStaminaDrainMultiplier=$DinoCharacterStaminaDrainMultiplier?\
PlayerCharacterHealthRecoveryMultiplier=$PlayerCharacterHealthRecoveryMultiplier?\
DinoCharacterHealthRecoveryMultiplier=$DinoCharacterHealthRecoveryMultiplier?\
DinoCountMultiplier=$DinoCountMultiplier?\
HarvestHealthMultiplier=$HarvestHealthMultiplier?\
PvEStructureDecayDestructionPeriod=$PvEStructureDecayDestructionPeriod?\
MaxStructuresInRange=$MaxStructuresInRange?\
DayCycleSpeedScale=$DayCycleSpeedScale?\
NightTimeSpeedScale=$NightTimeSpeedScale?\
DayTimeSpeedScale=$DayTimeSpeedScale?\
DinoDamageMultiplier=$DinoDamageMultiplier?\
TamedDinoDamageMultiplier=$TamedDinoDamageMultiplier?\
PlayerDamageMultiplier=$PlayerDamageMultiplier?\
StructureDamageMultiplier=$StructureDamageMultiplier?\
PlayerResistanceMultiplier=$PlayerResistanceMultiplier?\
DinoResistanceMultiplier=$DinoResistanceMultiplier?\
TamedDinoResistanceMultiplier=$TamedDinoResistanceMultiplier?\
StructureResistanceMultiplier=$StructureResistanceMultiplier?\
XPMultiplier=$XPMultiplier -server -log"

screen -A -m -d -S $sessionName ./$arkExecute $executeString

echo -e; echo -e "$GREEN Server is starting up. To access the console, relaunch the script and use: ./arkserver.sh view $RESET"
echo -e; exit 0
