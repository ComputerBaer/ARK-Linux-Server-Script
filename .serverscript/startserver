#!/bin/bash

source ../configuration.ini
cd ../

echo
echo "Checking to see if the server is already running..."
echo
sleep 1s
if screen -list | grep -q "$sessionName"; then
    echo
    echo -e " \e[1;31mERROR \e[0m A screen with the name $sessionName is already running.\e[0m"
    echo "Would you like me to stop this running process?"
    echo
    echo "Type: Yes(Y) or No(N)"
    echo -n "[Y/N]: " ; read runningsession
    
    if [ $runningsession = Y ]; then
        screen -S $sessionName -X quit
        
        if screen -list | grep -q "$sessionName"; then
            echo
            echo "Unable to stop the process. Please try yourself with this command:"
            echo
            echo "screen -S $sessionName -X quit"
            echo
            exit 0
        else
            echo
            echo "Process stopped successfully. :)"
            echo
        fi
    elif [ $runningsession = N ]; then
        echo
        echo "The script will NOT stop the session as you chose against it."
        echo
        echo "Exiting the script now."
        echo
        exit 0
    fi
    
fi

# Start Function (ignore my sleeps and echos, looks nicer this way)
echo
echo "Starting Server... Please Wait."
sleep 1s
echo
echo "Removing old PID's of the configured executable."
pkill -9 $arkExecute
echo
echo "PID's Removed"
echo
echo "Setting ULIMIT to 100000"
    
 ulimit -n 100000
        
echo 
echo "Going to listed game directory."
echo "$gameDir"
cd $gameDir
echo
echo "Making sure executable is properly named."
if [ -f ShooterGameServer ]; then
    echo "File name is not as defined."
    sleep 3s
    if [ -f ShooterGameServer = $arkExecute ]; then
        echo "File matches what in the config."
    else
        echo
        echo "Renaming executable to name listed in the config."
        mv ShooterGameServer $arkExecute
        echo
        echo "File named changed, moving forward."
    fi
fi

if [ -f $arkExecute ]; then
    echo "Proper file name exists."
else
    echo "Couldnt rename file. Exiting."
    exit 0
fi
echo "File named properly, moving forward."
echo
    
if [ -f $arkExecute ]; then
    echo " Found executable, preparing startup parameters."        
else
    echo
    echo -e " \e[1;31mERROR \e[0m Script was unable to find th executable: \e[1;33m$arkExecute\e[0m"
    echo; echo
    echo " These are the files the script has found:"
    echo; echo "================================="
    echo -e "\e[1;32m"
    dir
    echo -e "\e[0m"
    echo "================================="; echo
    echo -e " None of these are the file \e[1;33m$arkExecute\e[0m"
    echo " Exiting out now."
    echo
    exit 0
fi
    
echo
echo "Running startup parameters. These parameter will be listed below now."
echo
echo "-----------------------------------------------------"
echo
echo "Executed File: $arkExecute"
echo "Screen Name: $sessionName"
echo -e "HostName: \e[1;32m$hostName\e[1;33m$arkServersName\e[0m"
echo -e "AdminPass: \e[1;33m$adminPass \e[0m"
    
if [ -z $serverPass ]; then
    echo -e "ServerPass: \e[1;31mNO PASSWORD \e[0m"
else
    echo -e "ServerPass: \e[1;32m$serverPass \e[0m"
fi
    
if [ -z $arkServersName ]; then
    echo -e "ArkServers: \e[1;31mDISABLED \e[0m"     
else    
    echo -e "ArkServers: \e[1;33m$arkServers \e[0m"   
fi
    
echo
echo "#### SERVER SETTINGS ###"
echo
echo "ShowPlayers:          $showPlayers"
echo "Hardcore:             $hardcore"
echo "GlobalVoice:          $globalVoice"
echo "Ranged Chat:          $proxChat"
echo "Tribute Downloads:    $noTributeDl"
echo "Third Person:         $thirdPerson"
echo "Notify Left:          $notifyLeft"
echo "No Notify Join:       $dontNotifyJoin"
echo "PVE:                  $pveServer"
echo "CrossHair:            $crossHair"
echo "No Hud:               $noHud"
echo "Difficulty Rate:      $difficulty"
echo
echo "-----------------------------------------------------"
echo 
sleep 2s
echo "Now executing...."

screen -A -m -d -S $sessionName ./$arkExecute TheIsland?listen?SessionName=$hostName?ServerAdminPassword=$adminPass?ServerPassword=$serverPass?ShowMapPlayerLocation=$showPlayers?ServerHardcore=$hardcore?GlobalVoiceChat=$globalVoice?ProximityChat=$proxChat?NoTributeDownloads=$noTributeDl?AllowThirdPersonPlayer=$thirdPerson?AlwaysNotifyPlayerLeft=$notifyLeft?DontAlwaysNotifyPlayerJoined=$dontNotifyJoin?ServerPVE=$pveServer?ServerCrosshair=$crossHair?ServerForceNoHUD=$noHud?DifficultyOffset=$difficulty -server -log

echo
echo "Server is now starting up. To access the console, relauch the scrip and type: ./arkscript view"
echo
exit 0
